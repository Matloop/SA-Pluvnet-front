@use '@angular/material' as mat;

:host {
  display: block;
  padding: 24px; // Overall padding for the page
}

.pluviometro-container {
  max-width: 1200px; // Max width for content
  margin: 0 auto; // Center content
}

.page-header {
  display: flex; // Using CSS Flexbox for broader compatibility
  justify-content: space-between;
  align-items: center;
  margin-bottom: 24px;
  flex-wrap: wrap; // Allow wrapping on smaller screens
  gap: 16px; // Space between title and actions if they wrap

  .title-section {
    h1 {
      margin-top: 0;
      margin-bottom: 4px;
      font-size: 2em; // Larger title
      font-weight: 500;
    }
    p {
      margin: 0;
      color: mat.get-color-from-palette(mat.$grey-palette, 600); // Softer color for subtitle
    }
  }

  .actions-section {
    display: flex;
    gap: 12px; // Space between buttons
    flex-wrap: wrap; // Allow buttons to wrap
  }
}

.table-container {
  overflow: auto; // Allow horizontal scrolling if table is too wide
  border-radius: 8px; // Rounded corners for the table container
}

.pluviometro-table {
  width: 100%;

  th.mat-header-cell, td.mat-cell {
    padding: 8px 12px; // Consistent padding for cells
    vertical-align: middle;
  }

  th.mat-header-cell {
    font-weight: 500; // Bolder header text
  }

  // Column specific styling
  .checkbox-column {
    width: 60px; // Fixed width for checkbox column
    padding-right: 24px; // More space for checkbox
  }

  .proprietario-cell {
    display: flex;
    align-items: center;
    gap: 10px;

    .avatar {
      width: 36px;
      height: 36px;
      border-radius: 50%;
      object-fit: cover;
    }
    .avatar-placeholder {
      width: 36px;
      height: 36px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      font-weight: 500;
      background-color: mat.get-color-from-palette(mat.$indigo-palette, 100);
      color: mat.get-color-from-palette(mat.$indigo-palette, 700);
    }
  }

  .localizacao-cell {
    display: flex;
    align-items: center;
    justify-content: space-between; // Push address and button apart
    gap: 8px; // Space between address and button
    min-width: 220px; // Ensure enough space for content

    .endereco-info {
      display: flex;
      flex-direction: column;
      line-height: 1.3;
      span {
        white-space: nowrap; // Prevent address parts from wrapping individually
        overflow: hidden;
        text-overflow: ellipsis;
      }
      .bairro-cidade {
        font-size: 0.85em;
        color: mat.get-color-from-palette(mat.$grey-palette, 600);
      }
    }
    button {
      flex-shrink: 0; // Prevent button from shrinking
    }
  }

  .actions-column-header {
    text-align: center !important; // Center "Ações" header
    width: 120px; // Give actions column a bit more fixed width
  }
  .actions-column {
    text-align: right; // Align action buttons to the right
    white-space: nowrap; // Prevent buttons from wrapping within the cell
    // The mat-menu will handle multiple buttons cleanly
    button {
        margin-left: 4px; // Small gap between action buttons if needed
    }
  }

  // Selected row styling
  .mat-row.selected-row {
    background-color: mat.get-color-from-palette(mat.$indigo-palette, 50); // Light blue for selected row
  }

  // No data row
  .mat-row .mat-cell[colspan] {
    text-align: center;
    padding: 20px;
    color: mat.get-color-from-palette(mat.$grey-palette, 500);
  }
}

// For menu item text color if it's not inheriting correctly (e.g., warn color)
.warn-text {
  color: mat.get-color-from-palette(mat.$deep-orange-palette, A700) !important; // Or your theme's warn color
}

// SnackBar custom panels (optional, but good for UX)
// Add these to your global styles.scss if you want them globally
// ::ng-deep .success-snackbar {
//   background-color: mat.get-color-from-palette(mat.$green-palette, 500);
//   color: white;
// }
// ::ng-deep .error-snackbar {
//   background-color: mat.get-color-from-palette(mat.$red-palette, 500);
//   color: white;
// }